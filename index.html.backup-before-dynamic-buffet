<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Veranstaltungsanmeldung</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Georgia', serif;
            background-color: #f5f7fa;
            color: #2c3e50;
            line-height: 1.6;
        }

        .container {
            display: flex;
            min-height: 100vh;
        }

        .main-content {
            flex: 1;
            padding: 40px;
            max-width: 800px;
            margin: 0 auto;
        }

        .sidebar {
            width: 350px;
            background-color: #1e3a5f;
            color: white;
            padding: 30px;
            overflow-y: auto;
            box-shadow: -2px 0 10px rgba(0,0,0,0.1);
        }

        h1 {
            color: #1e3a5f;
            font-size: 2.5em;
            margin-bottom: 20px;
            font-weight: normal;
        }

        h2 {
            color: #2c5282;
            font-size: 1.8em;
            margin-bottom: 20px;
            font-weight: normal;
        }

        .header-image {
            position: relative;
            margin: -40px -40px 30px -40px;
            height: 400px;
            overflow: hidden;
            border-radius: 0 0 8px 8px;
        }

        .header-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
        }

        .header-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(to top, rgba(30, 58, 95, 0.95), rgba(30, 58, 95, 0.7), transparent);
            padding: 60px 40px 30px;
            text-align: center;
        }

        .main-title {
            color: white;
            font-size: 2.8em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .event-title {
            color: #a0c4ff;
            font-size: 2.2em;
            margin-bottom: 0;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.5);
        }

        .welcome-text {
            background-color: #e6f2ff;
            padding: 25px;
            border-radius: 8px;
            margin-bottom: 30px;
            border-left: 4px solid #2c5282;
        }

        .form-group {
            margin-bottom: 25px;
        }

        label {
            display: block;
            color: #1e3a5f;
            font-weight: bold;
            margin-bottom: 8px;
        }

        input[type="text"],
        input[type="email"],
        textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #cbd5e0;
            border-radius: 4px;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        input[type="text"]:focus,
        input[type="email"]:focus,
        textarea:focus {
            outline: none;
            border-color: #2c5282;
        }

        textarea {
            resize: vertical;
            min-height: 80px;
        }

        .button {
            background-color: #2c5282;
            color: white;
            padding: 14px 30px;
            border: none;
            border-radius: 4px;
            font-size: 18px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .button:hover {
            background-color: #1e3a5f;
        }

        .sidebar h3 {
            font-size: 1.5em;
            margin-bottom: 20px;
            font-weight: normal;
            border-bottom: 2px solid #4a6fa5;
            padding-bottom: 10px;
        }

        .contribution-list {
            list-style: none;
        }

        .contribution-item {
            background-color: rgba(255,255,255,0.1);
            padding: 12px;
            margin-bottom: 10px;
            border-radius: 4px;
            border-left: 3px solid #4a6fa5;
        }

        .contribution-item strong {
            color: #a0c4ff;
        }

        .success-message {
            background-color: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
            display: none;
        }

        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
            display: none;
        }

        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                order: 2;
            }
            
            .main-content {
                order: 1;
            }
        }

/* Live Buffet Sidebar Styles */
.buffet-live-section {
    margin-bottom: 30px;
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.buffet-live-section h3 {
    color: #ffffff;
    font-size: 1.2em;
    margin-bottom: 15px;
    text-align: center;
}

.buffet-status {
    font-size: 0.8em;
    text-align: center;
    margin-bottom: 10px;
    padding: 4px 8px;
    border-radius: 4px;
}

.buffet-status.loading {
    background-color: rgba(255, 193, 7, 0.3);
    color: #ffc107;
}

.buffet-status.success {
    background-color: rgba(40, 167, 69, 0.3);
    color: #28a745;
}

.buffet-status.error {
    background-color: rgba(220, 53, 69, 0.3);
    color: #dc3545;
}

.buffet-item-live {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    margin-bottom: 5px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    border-left: 3px solid #4CAF50;
}

.buffet-item-live:hover {
    background-color: rgba(255, 255, 255, 0.2);
}

.buffet-name {
    color: #ffffff;
    font-size: 0.9em;
    flex-grow: 1;
}

.buffet-count {
    font-weight: bold;
    font-size: 0.8em;
    padding: 2px 6px;
    border-radius: 3px;
    min-width: 20px;
    text-align: center;
}

.buffet-count.count-low {
    background-color: #ffc107;
    color: #212529;
}

.buffet-count.count-medium {
    background-color: #17a2b8;
    color: #ffffff;
}

.buffet-count.count-high {
    background-color: #28a745;
    color: #ffffff;
}

.buffet-item-placeholder {
    text-align: center;
    color: rgba(255, 255, 255, 0.7);
    font-style: italic;
    padding: 20px;
}

.buffet-stats {
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px solid rgba(255, 255, 255, 0.2);
}

.buffet-stat {
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.8em;
    margin-bottom: 5px;
    text-align: center;
}

#buffet-live-liste {
    max-height: 200px;
    overflow-y: auto;
}

#buffet-live-liste::-webkit-scrollbar {
    width: 4px;
}

#buffet-live-liste::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
}

#buffet-live-liste::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 2px;
}

#buffet-live-liste::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
}
    </style>
</head>
<body>
    <div class="container">
        <div class="main-content">
            <div class="header-image">
                <img src="Logenhaus_blue.jpg" alt="Logenhaus Lübeck">
                <div class="header-overlay">
                    <h1 class="main-title">Sommerfest der Lübecker Freimaurer</h1>
                    <h2 class="event-title">Sommerfest 2025</h2>
                </div>
            </div>
            
            <div class="welcome-text">
                <p>Schön, dass du dich anmeldest! Mit deiner Teilnahme trägst du zur Stärkung der Bruderkette und des Lübecker Modells bei. Gemeinsam gestalten wir einen unvergesslichen Abend.</p>
            </div>

            <div id="successMessage" class="success-message">
                Deine Anmeldung wurde erfolgreich übermittelt! Du erhältst in Kürze eine Bestätigung per E-Mail.
            </div>

            <div id="errorMessage" class="error-message">
                Bitte fülle alle Pflichtfelder aus (Name, Buffet-Beitrag, Menge).
            </div>

            <form id="registrationForm">
                <h2>Deine Anmeldung zum Sommerfest 2025</h2>
                
                <div class="form-group">
                    <label for="name">Dein Name *</label>
                    <input type="text" id="name" name="name" required>
                </div>

                <div class="form-group">
                    <label for="email">E-Mail-Adresse (optional)</label>
                    <small style="color: #666; font-size: 14px;">Hinweis: Ohne E-Mail können wir keine Bestätigung senden.</small>
                    <input type="email" id="email" name="email">
                </div>

                <div class="form-group">
                    <label for="lodge">Logenzugehörigkeit</label>
                    <input type="text" id="lodge" name="lodge">
                </div>

                <div class="form-group">
                    <label for="companions">Begleitung (Namen, durch Komma getrennt)</label>
                    <input type="text" id="companions" name="companions" placeholder="z.B. Max Mustermann, Erika Musterfrau">
                </div>

                <h2>Dein Beitrag zum Buffet</h2>
                
                <div class="form-group">
                    <label for="contribution">Was möchtest du mitbringen? *</label>
                    <small style="color: #666; font-size: 14px;">Hinweis: Mehrere Beiträge bitte durch Komma trennen (z.B. "Kartoffelsalat, Brötchen")</small>
                    <input type="text" id="contribution" name="contribution" placeholder="z.B. Kartoffelsalat">
                </div>

                <div class="form-group">
                    <label for="quantity">Menge/Anzahl *</label>
                    <input type="text" id="quantity" name="quantity" placeholder="z.B. für 10 Personen">
                </div>

                <button type="submit" class="button">Anmeldung absenden</button>
            </form>
        </div>

        <div class="sidebar">
            <div class="buffet-live-section">
                <h3>🍽️ Live Buffet-Übersicht</h3>
                <div id="buffet-status" class="buffet-status">Lädt...</div>
                <div id="buffet-live-liste"></div>
                <div id="buffet-stats" class="buffet-stats"></div>
            </div>
        </div>
    </div>

    <script>
        // Simulierte Datenbank für Beiträge
        let contributions = [
            { item: "Kartoffelsalat", quantity: "für 15 Personen" },
            { item: "Frikadellen", quantity: "40 Stück" },
            { item: "Gemischter Salat", quantity: "2 große Schüsseln" }
        ];

        // Funktion zum Aktualisieren der Beitragsliste
        function updateContributionsList() {
            const list = document.getElementById('contributionsList');
            list.innerHTML = '';
            
            contributions.forEach(contribution => {
                const li = document.createElement('li');
                li.className = 'contribution-item';
                li.innerHTML = `
                    <strong>${contribution.item}</strong><br>
                    Menge: ${contribution.quantity}
                `;
                list.appendChild(li);
            });
        }

        // n8n Webhook URL
        const N8N_WEBHOOK_URL = 'https://automatisierung.frankrath.de/webhook/sommerfest-anmeldung';

        // Formular-Submit Handler
        document.getElementById('registrationForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Button sofort deaktivieren
            const submitButton = document.querySelector('button[type="submit"]');
            const originalText = submitButton.textContent;
            submitButton.disabled = true;
            submitButton.textContent = "Wird verarbeitet...";
            submitButton.style.backgroundColor = "#6c757d";
            submitButton.style.cursor = "not-allowed";
            
            // Formulardaten sammeln
            const companionsValue = document.getElementById('companions').value || '';
            const gaesteArray = companionsValue ? companionsValue.split(',').map(s => s.trim()).filter(s => s.length > 0) : [];
            const anzahlGaeste = gaesteArray.length;
            const gesamtPersonen = 1 + anzahlGaeste;
            
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value || 'Keine E-Mail-Adresse',
                loge: document.getElementById('lodge').value,
                gaesteNamen: companionsValue,
                anzahlGaeste: anzahlGaeste,
                gesamtPersonen: gesamtPersonen,
                buffet: document.getElementById('contribution').value,
                portionen: document.getElementById('quantity').value,
                aufbau: 'Noch nicht angegeben',
                abbau: 'Noch nicht angegeben',
                bemerkungen: 'Noch nicht angegeben',
                timestamp: new Date().toISOString()
            };

            // Validierung
            if (!formData.name || !formData.buffet || !formData.portionen) {
                // Button wieder aktivieren bei Fehler
                submitButton.disabled = false;
                submitButton.textContent = originalText;
                submitButton.style.backgroundColor = "#2c5282";
                submitButton.style.cursor = "pointer";
                
                document.getElementById("errorMessage").style.display = "block";
                document.getElementById("successMessage").style.display = "none";
                return;
            }

            try {
                // HINWEIS: Das Senden an n8n erfolgt erst von der Helferseite!
                // Hier nur lokale Verarbeitung und Weiterleitung
                
                // Neuen Beitrag zur Liste hinzufügen
                contributions.push({
                    item: formData.buffet,
                    quantity: formData.portionen
                });
                updateContributionsList();

        // Live Buffet Sidebar JavaScript
        let buffetData = {};
        let updateInterval;
        let isUpdating = false;
        
        const BUFFET_API_URL = "https://automatisierung.frankrath.de/webhook/buffet-uebersicht";
        
        async function loadBuffetData() {
            if (isUpdating) return;
            
            try {
                isUpdating = true;
                showLoadingState();
                
                const response = await fetch(BUFFET_API_URL, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json",
                        "Cache-Control": "no-cache"
                    }
                });
        
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
        
                const data = await response.json();
                buffetData = data;
                
                updateBuffetDisplay();
                showSuccessState();
                
            } catch (error) {
                console.error("Fehler beim Laden der Buffet-Daten:", error);
                showErrorState(error.message);
            } finally {
                isUpdating = false;
            }
        }
        
        function updateBuffetDisplay() {
            const buffetContainer = document.getElementById("buffet-live-liste");
            if (!buffetContainer) return;
        
            if (!buffetData || Object.keys(buffetData).length === 0) {
                buffetContainer.innerHTML = "<div class="buffet-item-placeholder">Noch keine Anmeldungen</div>";
                return;
            }
        
            const sortedEntries = Object.entries(buffetData)
                .sort(([,a], [,b]) => b - a)
                .filter(([name, count]) => name && count > 0);
        
            const buffetHTML = sortedEntries.map(([name, count]) => {
                const countClass = count >= 20 ? "count-high" : count >= 10 ? "count-medium" : "count-low";
                return `
                    <div class="buffet-item-live">
                        <span class="buffet-name">${name}</span>
                        <span class="buffet-count ${countClass}">${count}</span>
                    </div>
                `;
            }).join("");
        
            buffetContainer.innerHTML = buffetHTML;
            
            const totalBeitraege = sortedEntries.length;
            const totalPortionen = sortedEntries.reduce((sum, [,count]) => sum + count, 0);
            
            const statsContainer = document.getElementById("buffet-stats");
            if (statsContainer) {
                statsContainer.innerHTML = `
                    <div class="buffet-stat">${totalBeitraege} verschiedene Beiträge</div>
                    <div class="buffet-stat">${totalPortionen} Portionen insgesamt</div>
                `;
            }
        }
        
        function showLoadingState() {
            const statusIndicator = document.getElementById("buffet-status");
            if (statusIndicator) {
                statusIndicator.textContent = "Aktualisiere...";
                statusIndicator.className = "buffet-status loading";
            }
        }
        
        function showSuccessState() {
            const statusIndicator = document.getElementById("buffet-status");
            if (statusIndicator) {
                statusIndicator.textContent = `Aktualisiert: ${new Date().toLocaleTimeString()}`;
                statusIndicator.className = "buffet-status success";
            }
        }
        
        function showErrorState(message) {
            const statusIndicator = document.getElementById("buffet-status");
            if (statusIndicator) {
                statusIndicator.textContent = "Fehler beim Laden";
                statusIndicator.className = "buffet-status error";
            }
        }
        
        function startAutoRefresh() {
            if (updateInterval) {
                clearInterval(updateInterval);
            }
        
            loadBuffetData();
            updateInterval = setInterval(() => {
                loadBuffetData();
            }, 30000);
        }
        
        // Starte Auto-Refresh für Live-Buffet-Sidebar
        if (document.getElementById("buffet-live-liste")) {
            startAutoRefresh();
        }
        
        // Stoppe Auto-Refresh beim Verlassen der Seite
        window.addEventListener("beforeunload", function() {
            if (updateInterval) {
                clearInterval(updateInterval);
            }
        });

                // Erfolgsanzeige
                document.getElementById('successMessage').style.display = 'block';
                document.getElementById('errorMessage').style.display = 'none';
                
                // Button-Text ändern
                submitButton.textContent = "Weiterleitung in 2 Sekunden...";
                
                // Weiterleitung zur Helferseite nach 2 Sekunden
                setTimeout(() => {
                    const params = new URLSearchParams(formData);
                    window.location.href = `helfer.html?${params.toString()}`;
                }, 2000);
                
            } catch (error) {
                console.error('Fehler beim Verarbeiten:', error);
                
                // Button wieder aktivieren bei Fehler
                submitButton.disabled = false;
                submitButton.textContent = originalText;
                submitButton.style.backgroundColor = "#2c5282";
                submitButton.style.cursor = "pointer";
                
                document.getElementById('errorMessage').textContent = 'Fehler beim Verarbeiten der Anmeldung. Bitte versuche es später erneut.';
                document.getElementById('errorMessage').style.display = 'block';
                document.getElementById('successMessage').style.display = 'none';
            }
        });

        // Beitragsliste beim Laden initialisieren
        updateContributionsList();

        // Live Buffet Sidebar JavaScript
        let buffetData = {};
        let updateInterval;
        let isUpdating = false;
        
        const BUFFET_API_URL = "https://automatisierung.frankrath.de/webhook/buffet-uebersicht";
        
        async function loadBuffetData() {
            if (isUpdating) return;
            
            try {
                isUpdating = true;
                showLoadingState();
                
                const response = await fetch(BUFFET_API_URL, {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json",
                        "Cache-Control": "no-cache"
                    }
                });
        
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
        
                const data = await response.json();
                buffetData = data;
                
                updateBuffetDisplay();
                showSuccessState();
                
            } catch (error) {
                console.error("Fehler beim Laden der Buffet-Daten:", error);
                showErrorState(error.message);
            } finally {
                isUpdating = false;
            }
        }
        
        function updateBuffetDisplay() {
            const buffetContainer = document.getElementById("buffet-live-liste");
            if (!buffetContainer) return;
        
            if (!buffetData || Object.keys(buffetData).length === 0) {
                buffetContainer.innerHTML = "<div class="buffet-item-placeholder">Noch keine Anmeldungen</div>";
                return;
            }
        
            const sortedEntries = Object.entries(buffetData)
                .sort(([,a], [,b]) => b - a)
                .filter(([name, count]) => name && count > 0);
        
            const buffetHTML = sortedEntries.map(([name, count]) => {
                const countClass = count >= 20 ? "count-high" : count >= 10 ? "count-medium" : "count-low";
                return `
                    <div class="buffet-item-live">
                        <span class="buffet-name">${name}</span>
                        <span class="buffet-count ${countClass}">${count}</span>
                    </div>
                `;
            }).join("");
        
            buffetContainer.innerHTML = buffetHTML;
            
            const totalBeitraege = sortedEntries.length;
            const totalPortionen = sortedEntries.reduce((sum, [,count]) => sum + count, 0);
            
            const statsContainer = document.getElementById("buffet-stats");
            if (statsContainer) {
                statsContainer.innerHTML = `
                    <div class="buffet-stat">${totalBeitraege} verschiedene Beiträge</div>
                    <div class="buffet-stat">${totalPortionen} Portionen insgesamt</div>
                `;
            }
        }
        
        function showLoadingState() {
            const statusIndicator = document.getElementById("buffet-status");
            if (statusIndicator) {
                statusIndicator.textContent = "Aktualisiere...";
                statusIndicator.className = "buffet-status loading";
            }
        }
        
        function showSuccessState() {
            const statusIndicator = document.getElementById("buffet-status");
            if (statusIndicator) {
                statusIndicator.textContent = `Aktualisiert: ${new Date().toLocaleTimeString()}`;
                statusIndicator.className = "buffet-status success";
            }
        }
        
        function showErrorState(message) {
            const statusIndicator = document.getElementById("buffet-status");
            if (statusIndicator) {
                statusIndicator.textContent = "Fehler beim Laden";
                statusIndicator.className = "buffet-status error";
            }
        }
        
        function startAutoRefresh() {
            if (updateInterval) {
                clearInterval(updateInterval);
            }
        
            loadBuffetData();
            updateInterval = setInterval(() => {
                loadBuffetData();
            }, 30000);
        }
        
        // Starte Auto-Refresh für Live-Buffet-Sidebar
        if (document.getElementById("buffet-live-liste")) {
            startAutoRefresh();
        }
        
        // Stoppe Auto-Refresh beim Verlassen der Seite
        window.addEventListener("beforeunload", function() {
            if (updateInterval) {
                clearInterval(updateInterval);
            }
        });
    </script>
</body>
</html>
